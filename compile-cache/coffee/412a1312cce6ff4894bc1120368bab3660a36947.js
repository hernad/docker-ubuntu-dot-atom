(function() {
  var PathExpander, fs, os, path, _;

  fs = require('fs-plus');

  path = require('path');

  os = require('os');

  _ = require('underscore-plus');

  module.exports = PathExpander = (function() {
    function PathExpander(env) {
      this.env = env;
    }

    PathExpander.prototype.expand = function(p, gopath) {
      var pathItem, paths, result, _i, _len;
      if (!((p != null) && p.trim() !== '')) {
        return '';
      }
      if (p.indexOf(path.delimiter) === -1) {
        return this.expandItem(p, gopath);
      }
      paths = p.split(path.delimiter);
      result = '';
      for (_i = 0, _len = paths.length; _i < _len; _i++) {
        pathItem = paths[_i];
        pathItem = this.expandItem(pathItem, gopath);
        result = result === '' ? pathItem : result + path.delimiter + pathItem;
      }
      return result;
    };

    PathExpander.prototype.expandItem = function(p, gopath) {
      var goroot, home;
      if (!((p != null) && p.trim() !== '')) {
        return '';
      }
      p = this.replaceGoPathToken(p, gopath);
      switch (os.platform()) {
        case 'darwin':
        case 'freebsd':
        case 'linux':
        case 'sunos':
          if (p.indexOf('~') !== -1) {
            home = this.env.HOME || this.env.HOMEPATH || this.env.USERPROFILE;
            p = p.replace(/~/i, home);
          }
          if (p.toUpperCase().indexOf('$HOME') !== -1) {
            home = this.env.HOME || this.env.HOMEPATH || this.env.USERPROFILE;
            p = p.replace(/\$HOME/i, home);
          }
          if (p.toUpperCase().indexOf('$GOROOT') !== -1) {
            goroot = this.env.GOROOT;
            if ((goroot != null) && goroot !== '') {
              p = p.replace(/\$GOROOT/i, goroot);
            }
          }
          break;
        case 'win32':
          if (p.indexOf('~') !== -1) {
            home = this.env.USERPROFILE;
            p = p.replace(/~/i, home);
          }
          if (p.toUpperCase().indexOf('%HOME%') !== -1) {
            home = this.env.HOME || this.env.HOMEPATH || this.env.USERPROFILE;
            p = p.replace(/%HOME%/i, home);
          }
          if (p.toUpperCase().indexOf('%USERPROFILE%') !== -1) {
            home = this.env.USERPROFILE || this.env.HOME || this.env.HOMEPATH;
            p = p.replace(/%USERPROFILE%/i, home);
          }
          if (p.toUpperCase().indexOf('%HOMEPATH%') !== -1) {
            home = this.env.HOMEPATH || this.env.HOME || this.env.USERPROFILE;
            p = p.replace(/%HOMEPATH%/i, home);
          }
          if (p.toUpperCase().indexOf('%GOROOT%') !== -1) {
            goroot = this.env.GOROOT;
            if ((goroot != null) && goroot !== '') {
              p = p.replace(/%GOROOT%/i, goroot);
            }
          }
      }
      return this.resolveAndNormalize(p);
    };

    PathExpander.prototype.replaceGoPathToken = function(p, gopath) {
      if (!((gopath != null) && gopath !== '')) {
        return p;
      }
      gopath = gopath.indexOf(path.delimiter) === -1 ? gopath.trim() : gopath.split(path.delimiter)[0].trim();
      p = p.replace(/^\$GOPATH/i, gopath.trim() + '/');
      p = p.replace(/^%GOPATH%/i, gopath.trim());
      if ((p == null) || p.trim() === '') {
        return '';
      }
      return p.trim();
    };

    PathExpander.prototype.resolveAndNormalize = function(p) {
      var result;
      if (!((p != null) && p.trim() !== '')) {
        return '';
      }
      result = path.resolve(path.normalize(p));
      return result;
    };

    return PathExpander;

  })();

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiIgogIF0sCiAgIm5hbWVzIjogW10sCiAgIm1hcHBpbmdzIjogIkFBQUE7QUFBQSxNQUFBLDZCQUFBOztBQUFBLEVBQUEsRUFBQSxHQUFLLE9BQUEsQ0FBUSxTQUFSLENBQUwsQ0FBQTs7QUFBQSxFQUNBLElBQUEsR0FBTyxPQUFBLENBQVEsTUFBUixDQURQLENBQUE7O0FBQUEsRUFFQSxFQUFBLEdBQUssT0FBQSxDQUFRLElBQVIsQ0FGTCxDQUFBOztBQUFBLEVBR0EsQ0FBQSxHQUFJLE9BQUEsQ0FBUSxpQkFBUixDQUhKLENBQUE7O0FBQUEsRUFLQSxNQUFNLENBQUMsT0FBUCxHQUNNO0FBQ1MsSUFBQSxzQkFBRSxHQUFGLEdBQUE7QUFBUSxNQUFQLElBQUMsQ0FBQSxNQUFBLEdBQU0sQ0FBUjtJQUFBLENBQWI7O0FBQUEsMkJBRUEsTUFBQSxHQUFRLFNBQUMsQ0FBRCxFQUFJLE1BQUosR0FBQTtBQUNOLFVBQUEsaUNBQUE7QUFBQSxNQUFBLElBQUEsQ0FBQSxDQUFpQixXQUFBLElBQU8sQ0FBQyxDQUFDLElBQUYsQ0FBQSxDQUFBLEtBQWMsRUFBdEMsQ0FBQTtBQUFBLGVBQU8sRUFBUCxDQUFBO09BQUE7QUFDQSxNQUFBLElBQWlDLENBQUMsQ0FBQyxPQUFGLENBQVUsSUFBSSxDQUFDLFNBQWYsQ0FBQSxLQUE2QixDQUFBLENBQTlEO0FBQUEsZUFBTyxJQUFDLENBQUEsVUFBRCxDQUFZLENBQVosRUFBZSxNQUFmLENBQVAsQ0FBQTtPQURBO0FBQUEsTUFFQSxLQUFBLEdBQVEsQ0FBQyxDQUFDLEtBQUYsQ0FBUSxJQUFJLENBQUMsU0FBYixDQUZSLENBQUE7QUFBQSxNQUdBLE1BQUEsR0FBUyxFQUhULENBQUE7QUFJQSxXQUFBLDRDQUFBOzZCQUFBO0FBQ0UsUUFBQSxRQUFBLEdBQVcsSUFBQyxDQUFBLFVBQUQsQ0FBWSxRQUFaLEVBQXNCLE1BQXRCLENBQVgsQ0FBQTtBQUFBLFFBQ0EsTUFBQSxHQUFZLE1BQUEsS0FBVSxFQUFiLEdBQXFCLFFBQXJCLEdBQW1DLE1BQUEsR0FBUyxJQUFJLENBQUMsU0FBZCxHQUEwQixRQUR0RSxDQURGO0FBQUEsT0FKQTtBQU9BLGFBQU8sTUFBUCxDQVJNO0lBQUEsQ0FGUixDQUFBOztBQUFBLDJCQVlBLFVBQUEsR0FBWSxTQUFDLENBQUQsRUFBSSxNQUFKLEdBQUE7QUFDVixVQUFBLFlBQUE7QUFBQSxNQUFBLElBQUEsQ0FBQSxDQUFpQixXQUFBLElBQU8sQ0FBQyxDQUFDLElBQUYsQ0FBQSxDQUFBLEtBQWMsRUFBdEMsQ0FBQTtBQUFBLGVBQU8sRUFBUCxDQUFBO09BQUE7QUFBQSxNQUNBLENBQUEsR0FBSSxJQUFDLENBQUEsa0JBQUQsQ0FBb0IsQ0FBcEIsRUFBdUIsTUFBdkIsQ0FESixDQUFBO0FBRUEsY0FBTyxFQUFFLENBQUMsUUFBSCxDQUFBLENBQVA7QUFBQSxhQUNPLFFBRFA7QUFBQSxhQUNpQixTQURqQjtBQUFBLGFBQzRCLE9BRDVCO0FBQUEsYUFDcUMsT0FEckM7QUFFSSxVQUFBLElBQU8sQ0FBQyxDQUFDLE9BQUYsQ0FBVSxHQUFWLENBQUEsS0FBa0IsQ0FBQSxDQUF6QjtBQUNFLFlBQUEsSUFBQSxHQUFPLElBQUMsQ0FBQSxHQUFHLENBQUMsSUFBTCxJQUFhLElBQUMsQ0FBQSxHQUFHLENBQUMsUUFBbEIsSUFBOEIsSUFBQyxDQUFBLEdBQUcsQ0FBQyxXQUExQyxDQUFBO0FBQUEsWUFDQSxDQUFBLEdBQUksQ0FBQyxDQUFDLE9BQUYsQ0FBVSxJQUFWLEVBQWdCLElBQWhCLENBREosQ0FERjtXQUFBO0FBR0EsVUFBQSxJQUFPLENBQUMsQ0FBQyxXQUFGLENBQUEsQ0FBZSxDQUFDLE9BQWhCLENBQXdCLE9BQXhCLENBQUEsS0FBb0MsQ0FBQSxDQUEzQztBQUNFLFlBQUEsSUFBQSxHQUFPLElBQUMsQ0FBQSxHQUFHLENBQUMsSUFBTCxJQUFhLElBQUMsQ0FBQSxHQUFHLENBQUMsUUFBbEIsSUFBOEIsSUFBQyxDQUFBLEdBQUcsQ0FBQyxXQUExQyxDQUFBO0FBQUEsWUFDQSxDQUFBLEdBQUksQ0FBQyxDQUFDLE9BQUYsQ0FBVSxTQUFWLEVBQXFCLElBQXJCLENBREosQ0FERjtXQUhBO0FBTUEsVUFBQSxJQUFPLENBQUMsQ0FBQyxXQUFGLENBQUEsQ0FBZSxDQUFDLE9BQWhCLENBQXdCLFNBQXhCLENBQUEsS0FBc0MsQ0FBQSxDQUE3QztBQUNFLFlBQUEsTUFBQSxHQUFTLElBQUMsQ0FBQSxHQUFHLENBQUMsTUFBZCxDQUFBO0FBQ0EsWUFBQSxJQUFzQyxnQkFBQSxJQUFZLE1BQUEsS0FBWSxFQUE5RDtBQUFBLGNBQUEsQ0FBQSxHQUFJLENBQUMsQ0FBQyxPQUFGLENBQVUsV0FBVixFQUF1QixNQUF2QixDQUFKLENBQUE7YUFGRjtXQVJKO0FBQ3FDO0FBRHJDLGFBV08sT0FYUDtBQVlJLFVBQUEsSUFBTyxDQUFDLENBQUMsT0FBRixDQUFVLEdBQVYsQ0FBQSxLQUFrQixDQUFBLENBQXpCO0FBQ0UsWUFBQSxJQUFBLEdBQU8sSUFBQyxDQUFBLEdBQUcsQ0FBQyxXQUFaLENBQUE7QUFBQSxZQUNBLENBQUEsR0FBSSxDQUFDLENBQUMsT0FBRixDQUFVLElBQVYsRUFBZ0IsSUFBaEIsQ0FESixDQURGO1dBQUE7QUFHQSxVQUFBLElBQU8sQ0FBQyxDQUFDLFdBQUYsQ0FBQSxDQUFlLENBQUMsT0FBaEIsQ0FBd0IsUUFBeEIsQ0FBQSxLQUFxQyxDQUFBLENBQTVDO0FBQ0UsWUFBQSxJQUFBLEdBQU8sSUFBQyxDQUFBLEdBQUcsQ0FBQyxJQUFMLElBQWEsSUFBQyxDQUFBLEdBQUcsQ0FBQyxRQUFsQixJQUE4QixJQUFDLENBQUEsR0FBRyxDQUFDLFdBQTFDLENBQUE7QUFBQSxZQUNBLENBQUEsR0FBSSxDQUFDLENBQUMsT0FBRixDQUFVLFNBQVYsRUFBcUIsSUFBckIsQ0FESixDQURGO1dBSEE7QUFNQSxVQUFBLElBQU8sQ0FBQyxDQUFDLFdBQUYsQ0FBQSxDQUFlLENBQUMsT0FBaEIsQ0FBd0IsZUFBeEIsQ0FBQSxLQUE0QyxDQUFBLENBQW5EO0FBQ0UsWUFBQSxJQUFBLEdBQU8sSUFBQyxDQUFBLEdBQUcsQ0FBQyxXQUFMLElBQW9CLElBQUMsQ0FBQSxHQUFHLENBQUMsSUFBekIsSUFBaUMsSUFBQyxDQUFBLEdBQUcsQ0FBQyxRQUE3QyxDQUFBO0FBQUEsWUFDQSxDQUFBLEdBQUksQ0FBQyxDQUFDLE9BQUYsQ0FBVSxnQkFBVixFQUE0QixJQUE1QixDQURKLENBREY7V0FOQTtBQVNBLFVBQUEsSUFBTyxDQUFDLENBQUMsV0FBRixDQUFBLENBQWUsQ0FBQyxPQUFoQixDQUF3QixZQUF4QixDQUFBLEtBQXlDLENBQUEsQ0FBaEQ7QUFDRSxZQUFBLElBQUEsR0FBTyxJQUFDLENBQUEsR0FBRyxDQUFDLFFBQUwsSUFBaUIsSUFBQyxDQUFBLEdBQUcsQ0FBQyxJQUF0QixJQUE4QixJQUFDLENBQUEsR0FBRyxDQUFDLFdBQTFDLENBQUE7QUFBQSxZQUNBLENBQUEsR0FBSSxDQUFDLENBQUMsT0FBRixDQUFVLGFBQVYsRUFBeUIsSUFBekIsQ0FESixDQURGO1dBVEE7QUFZQSxVQUFBLElBQU8sQ0FBQyxDQUFDLFdBQUYsQ0FBQSxDQUFlLENBQUMsT0FBaEIsQ0FBd0IsVUFBeEIsQ0FBQSxLQUF1QyxDQUFBLENBQTlDO0FBQ0UsWUFBQSxNQUFBLEdBQVMsSUFBQyxDQUFBLEdBQUcsQ0FBQyxNQUFkLENBQUE7QUFDQSxZQUFBLElBQXNDLGdCQUFBLElBQVksTUFBQSxLQUFZLEVBQTlEO0FBQUEsY0FBQSxDQUFBLEdBQUksQ0FBQyxDQUFDLE9BQUYsQ0FBVSxXQUFWLEVBQXVCLE1BQXZCLENBQUosQ0FBQTthQUZGO1dBeEJKO0FBQUEsT0FGQTthQTZCQSxJQUFDLENBQUEsbUJBQUQsQ0FBcUIsQ0FBckIsRUE5QlU7SUFBQSxDQVpaLENBQUE7O0FBQUEsMkJBNENBLGtCQUFBLEdBQW9CLFNBQUMsQ0FBRCxFQUFJLE1BQUosR0FBQTtBQUNsQixNQUFBLElBQUEsQ0FBQSxDQUFnQixnQkFBQSxJQUFZLE1BQUEsS0FBWSxFQUF4QyxDQUFBO0FBQUEsZUFBTyxDQUFQLENBQUE7T0FBQTtBQUFBLE1BQ0EsTUFBQSxHQUFZLE1BQU0sQ0FBQyxPQUFQLENBQWUsSUFBSSxDQUFDLFNBQXBCLENBQUEsS0FBa0MsQ0FBQSxDQUFyQyxHQUE2QyxNQUFNLENBQUMsSUFBUCxDQUFBLENBQTdDLEdBQWdFLE1BQU0sQ0FBQyxLQUFQLENBQWEsSUFBSSxDQUFDLFNBQWxCLENBQTZCLENBQUEsQ0FBQSxDQUFFLENBQUMsSUFBaEMsQ0FBQSxDQUR6RSxDQUFBO0FBQUEsTUFFQSxDQUFBLEdBQUksQ0FBQyxDQUFDLE9BQUYsQ0FBVSxZQUFWLEVBQXdCLE1BQU0sQ0FBQyxJQUFQLENBQUEsQ0FBQSxHQUFnQixHQUF4QyxDQUZKLENBQUE7QUFBQSxNQUdBLENBQUEsR0FBSSxDQUFDLENBQUMsT0FBRixDQUFVLFlBQVYsRUFBd0IsTUFBTSxDQUFDLElBQVAsQ0FBQSxDQUF4QixDQUhKLENBQUE7QUFJQSxNQUFBLElBQWlCLFdBQUosSUFBVSxDQUFDLENBQUMsSUFBRixDQUFBLENBQUEsS0FBWSxFQUFuQztBQUFBLGVBQU8sRUFBUCxDQUFBO09BSkE7YUFLQSxDQUFDLENBQUMsSUFBRixDQUFBLEVBTmtCO0lBQUEsQ0E1Q3BCLENBQUE7O0FBQUEsMkJBb0RBLG1CQUFBLEdBQXFCLFNBQUMsQ0FBRCxHQUFBO0FBQ25CLFVBQUEsTUFBQTtBQUFBLE1BQUEsSUFBQSxDQUFBLENBQWlCLFdBQUEsSUFBTyxDQUFDLENBQUMsSUFBRixDQUFBLENBQUEsS0FBYyxFQUF0QyxDQUFBO0FBQUEsZUFBTyxFQUFQLENBQUE7T0FBQTtBQUFBLE1BQ0EsTUFBQSxHQUFTLElBQUksQ0FBQyxPQUFMLENBQWEsSUFBSSxDQUFDLFNBQUwsQ0FBZSxDQUFmLENBQWIsQ0FEVCxDQUFBO0FBRUEsYUFBTyxNQUFQLENBSG1CO0lBQUEsQ0FwRHJCLENBQUE7O3dCQUFBOztNQVBGLENBQUE7QUFBQSIKfQ==
//# sourceURL=/home/bringout/.atom/packages/harbour-plus/lib/util/pathexpander.coffee